// Tokens list 
// generated by python script
typedef enum _token_t { 
    S_ASSIGN,
    S_BLOCK,
    S_BREAK,
    S_CODE,
    S_COND,
    S_COND_EXP,
    S_COND_EXP_A,
    S_CONTINUE,
    S_DATA,
    S_EXP,
    S_EXP_A,
    S_EXP_B,
    S_EXP_LIST,
    S_FACT,
    S_FACT_A,
    S_FUNC,
    S_FUNC_DEF,
    S_ID,
    S_IDLIST,
    S_IDLIST_A,
    S_ID_A,
    S_IF,
    S_PARM_LIST,
    S_PARM_LIST_A,
    S_PARM_LIST_B,
    S_PARM_LIST_C,
    S_RETURN,
    S_RETURN_A,
    S_START,
    S_STMNT,
    S_STMNTL,
    S_STMNT_A,
    S_STMNT_LIST,
    S_TERM,
    S_TERM_A,
    S_VAR,
    S_WHILE,
    T_ADD,
    T_BREAK,
    T_CMP,
    T_COMMA,
    T_CONDOP,
    T_COND_EXP_A,
    T_CONT,
    T_EQ,
    T_IF,
    T_LBRACE,
    T_LBRACK,
    T_LPAR,
    T_MINUS,
    T_MULT,
    T_NUMBER,
    T_PRINT,
    T_RBRACE,
    T_RBRACK,
    T_READ,
    T_RETURN,
    T_RPAR,
    T_SEMI,
    T_STRING,
    T_TYPE,
    T_VAR,
    T_VOID,
    T_WHILE,
    T_WRITE,
    T_e,
    T_vOID,
} token_t;


//Ruels table 
//generated by pthon script 
token_t rulesTable [][5]= {
/* 68 : S_START       */ { S_DATA       , S_CODE       , T_e          , T_e          , T_e          , },
/* 68 : S_DATA        */ { T_TYPE       , S_IDLIST     , T_SEMI       , S_DATA       , T_e          , },
/* 68 : S_DATA        */ { T_VOID       , S_IDLIST     , T_SEMI       , S_DATA       , T_e          , },
/* 68 : S_DATA        */ { T_e          , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_IDLIST      */ { S_ID         , S_IDLIST_A   , T_e          , T_e          , T_e          , },
/* 68 : S_IDLIST_A    */ { T_COMMA      , S_ID         , S_IDLIST_A   , T_e          , T_e          , },
/* 68 : S_ID          */ { T_VAR        , S_ID_A       , T_e          , T_e          , T_e          , },
/* 68 : S_ID_A        */ { T_LBRACK     , S_EXP        , T_RBRACK     , T_e          , T_e          , },
/* 68 : S_ID_A        */ { T_e          , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_EXP         */ { S_TERM       , S_EXP_A      , T_e          , T_e          , T_e          , },
/* 68 : S_EXP_A       */ { T_ADD        , S_EXP_B      , T_e          , T_e          , T_e          , },
/* 68 : S_EXP_A       */ { T_MINUS      , S_EXP_B      , T_e          , T_e          , T_e          , },
/* 68 : S_EXP_A       */ { T_e          , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_EXP_B       */ { S_TERM       , S_EXP_A      , T_e          , T_e          , T_e          , },
/* 68 : S_TERM        */ { S_FACT       , S_TERM_A     , T_e          , T_e          , T_e          , },
/* 68 : S_TERM        */ { T_MULT       , S_FACT       , S_TERM_A     , T_e          , T_e          , },
/* 68 : S_TERM        */ { T_e          , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_FACT        */ { T_VAR        , S_FACT_A     , T_e          , T_e          , T_e          , },
/* 68 : S_FACT        */ { T_NUMBER     , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_FACT        */ { T_MINUS      , T_NUMBER     , T_e          , T_e          , T_e          , },
/* 68 : S_FACT        */ { T_LPAR       , S_EXP        , T_RPAR       , T_e          , T_e          , },
/* 68 : S_FACT_A      */ { T_LBRACK     , S_EXP        , T_RBRACK     , T_e          , T_e          , },
/* 68 : S_FACT_A      */ { T_LPAR       , S_EXP        , S_EXP_LIST   , T_RPAR       , T_e          , },
/* 68 : S_FACT_A      */ { T_e          , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_EXP_LIST    */ { T_COMMA      , S_EXP        , S_EXP_LIST   , T_e          , T_e          , },
/* 68 : S_EXP_LIST    */ { T_e          , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_CODE        */ { S_FUNC       , S_FUNC_DEF   , S_CODE       , T_e          , T_e          , },
/* 68 : S_CODE        */ { T_e          , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_FUNC        */ { T_TYPE       , T_VAR        , T_LPAR       , S_PARM_LIST  , T_RPAR       , },
/* 68 : S_FUNC_DEF    */ { T_LBRACE     , S_DATA       , S_STMNTL     , T_RBRACE     , T_e          , },
/* 68 : S_FUNC_DEF    */ { T_SEMI       , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_PARM_LIST   */ { T_TYPE       , T_VAR        , S_PARM_LIST_A, T_e          , T_e          , },
/* 68 : S_PARM_LIST   */ { T_vOID       , S_PARM_LIST_C, T_e          , T_e          , T_e          , },
/* 68 : S_PARM_LIST   */ { T_e          , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_PARM_LIST_A */ { T_COMMA      , S_PARM_LIST_B, T_e          , T_e          , T_e          , },
/* 68 : S_PARM_LIST_A */ { T_e          , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_PARM_LIST_B */ { T_TYPE       , T_VAR        , S_PARM_LIST_A, T_e          , T_e          , },
/* 68 : S_PARM_LIST_B */ { T_VOID       , T_VAR        , S_PARM_LIST_A, T_e          , T_e          , },
/* 68 : S_PARM_LIST_C */ { T_VAR        , S_PARM_LIST_A, T_e          , T_e          , T_e          , },
/* 68 : S_PARM_LIST_C */ { T_e          , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_BLOCK       */ { T_LBRACE     , S_STMNT_LIST , T_RBRACE     , T_e          , T_e          , },
/* 68 : S_STMNT_LIST  */ { S_STMNT      , S_STMNT_LIST , T_e          , T_e          , T_e          , },
/* 68 : S_STMNT_LIST  */ { T_e          , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_STMNT       */ { S_VAR        , S_STMNT_A    , T_e          , T_e          , T_e          , },
/* 68 : S_STMNT       */ { S_IF         , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_STMNT       */ { S_WHILE      , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_STMNT       */ { S_RETURN     , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_STMNT       */ { S_BREAK      , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_STMNT       */ { S_CONTINUE   , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_STMNT       */ { T_READ       , T_LPAR       , T_VAR        , T_RPAR       , T_SEMI       , },
/* 68 : S_STMNT       */ { T_WRITE      , T_LPAR       , S_EXP        , T_RPAR       , T_SEMI       , },
/* 68 : S_STMNT       */ { T_PRINT      , T_LPAR       , T_STRING     , T_RPAR       , T_SEMI       , },
/* 68 : S_STMNT_A     */ { S_ASSIGN     , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_STMNT_A     */ { T_LBRACK     , S_EXP        , T_RBRACK     , S_ASSIGN     , T_e          , },
/* 68 : S_STMNT_A     */ { T_LPAR       , S_EXP_LIST   , T_RPAR       , T_SEMI       , T_e          , },
/* 68 : S_ASSIGN      */ { T_EQ         , S_EXP        , T_SEMI       , T_e          , T_e          , },
/* 68 : S_IF          */ { T_IF         , T_LPAR       , S_COND_EXP   , T_RPAR       , S_BLOCK      , },
/* 68 : S_COND_EXP    */ { S_COND       , T_COND_EXP_A , T_e          , T_e          , T_e          , },
/* 68 : S_COND_EXP_A  */ { T_CONDOP     , S_COND       , T_e          , T_e          , T_e          , },
/* 68 : S_COND_EXP_A  */ { T_e          , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_COND        */ { S_EXP        , T_CMP        , S_EXP        , T_e          , T_e          , },
/* 68 : S_WHILE       */ { T_WHILE      , T_LPAR       , S_COND_EXP   , T_RPAR       , S_BLOCK      , },
/* 68 : S_RETURN      */ { T_RETURN     , S_RETURN_A   , T_e          , T_e          , T_e          , },
/* 68 : S_RETURN_A    */ { S_EXP        , T_SEMI       , T_e          , T_e          , T_e          , },
/* 68 : S_RETURN_A    */ { T_SEMI       , T_e          , T_e          , T_e          , T_e          , },
/* 68 : S_BREAK       */ { T_BREAK      , T_SEMI       , T_e          , T_e          , T_e          , },
/* 68 : S_CONTINUE    */ { T_CONT       , T_SEMI       , T_e          , T_e          , T_e          , },
};


//Generate a token name lookup table
// generated by python script 
const char tokenName[67][13];
    tokenName[S_ASSIGN     ] = "S_ASSIGN";
    tokenName[S_BLOCK      ] = "S_BLOCK";
    tokenName[S_BREAK      ] = "S_BREAK";
    tokenName[S_CODE       ] = "S_CODE";
    tokenName[S_COND       ] = "S_COND";
    tokenName[S_COND_EXP   ] = "S_COND_EXP";
    tokenName[S_COND_EXP_A ] = "S_COND_EXP_A";
    tokenName[S_CONTINUE   ] = "S_CONTINUE";
    tokenName[S_DATA       ] = "S_DATA";
    tokenName[S_EXP        ] = "S_EXP";
    tokenName[S_EXP_A      ] = "S_EXP_A";
    tokenName[S_EXP_B      ] = "S_EXP_B";
    tokenName[S_EXP_LIST   ] = "S_EXP_LIST";
    tokenName[S_FACT       ] = "S_FACT";
    tokenName[S_FACT_A     ] = "S_FACT_A";
    tokenName[S_FUNC       ] = "S_FUNC";
    tokenName[S_FUNC_DEF   ] = "S_FUNC_DEF";
    tokenName[S_ID         ] = "S_ID";
    tokenName[S_IDLIST     ] = "S_IDLIST";
    tokenName[S_IDLIST_A   ] = "S_IDLIST_A";
    tokenName[S_ID_A       ] = "S_ID_A";
    tokenName[S_IF         ] = "S_IF";
    tokenName[S_PARM_LIST  ] = "S_PARM_LIST";
    tokenName[S_PARM_LIST_A] = "S_PARM_LIST_A";
    tokenName[S_PARM_LIST_B] = "S_PARM_LIST_B";
    tokenName[S_PARM_LIST_C] = "S_PARM_LIST_C";
    tokenName[S_RETURN     ] = "S_RETURN";
    tokenName[S_RETURN_A   ] = "S_RETURN_A";
    tokenName[S_START      ] = "S_START";
    tokenName[S_STMNT      ] = "S_STMNT";
    tokenName[S_STMNTL     ] = "S_STMNTL";
    tokenName[S_STMNT_A    ] = "S_STMNT_A";
    tokenName[S_STMNT_LIST ] = "S_STMNT_LIST";
    tokenName[S_TERM       ] = "S_TERM";
    tokenName[S_TERM_A     ] = "S_TERM_A";
    tokenName[S_VAR        ] = "S_VAR";
    tokenName[S_WHILE      ] = "S_WHILE";
    tokenName[T_ADD        ] = "T_ADD";
    tokenName[T_BREAK      ] = "T_BREAK";
    tokenName[T_CMP        ] = "T_CMP";
    tokenName[T_COMMA      ] = "T_COMMA";
    tokenName[T_CONDOP     ] = "T_CONDOP";
    tokenName[T_COND_EXP_A ] = "T_COND_EXP_A";
    tokenName[T_CONT       ] = "T_CONT";
    tokenName[T_EQ         ] = "T_EQ";
    tokenName[T_IF         ] = "T_IF";
    tokenName[T_LBRACE     ] = "T_LBRACE";
    tokenName[T_LBRACK     ] = "T_LBRACK";
    tokenName[T_LPAR       ] = "T_LPAR";
    tokenName[T_MINUS      ] = "T_MINUS";
    tokenName[T_MULT       ] = "T_MULT";
    tokenName[T_NUMBER     ] = "T_NUMBER";
    tokenName[T_PRINT      ] = "T_PRINT";
    tokenName[T_RBRACE     ] = "T_RBRACE";
    tokenName[T_RBRACK     ] = "T_RBRACK";
    tokenName[T_READ       ] = "T_READ";
    tokenName[T_RETURN     ] = "T_RETURN";
    tokenName[T_RPAR       ] = "T_RPAR";
    tokenName[T_SEMI       ] = "T_SEMI";
    tokenName[T_STRING     ] = "T_STRING";
    tokenName[T_TYPE       ] = "T_TYPE";
    tokenName[T_VAR        ] = "T_VAR";
    tokenName[T_VOID       ] = "T_VOID";
    tokenName[T_WHILE      ] = "T_WHILE";
    tokenName[T_WRITE      ] = "T_WRITE";
    tokenName[T_e          ] = "T_e";
    tokenName[T_vOID       ] = "T_vOID";
};
