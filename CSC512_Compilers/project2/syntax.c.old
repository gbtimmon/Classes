S_TYPE        :: T_VOID
S_TYPE        :: T_TYPE
S_ADD         :: T_ADD
S_ADD         :: T_MINUS
S_START       :: S_TYPE       T_VAR         S_START_A                            FIRST+: T_TYPE   T_VOID
S_START       :: T_e                                                             FIRST+: T_EOF
S_START_A     :: S_BRACK_EXP  S_IDLIST      T_SEMI        S_START                FIRST+: T_LBRACK T_COMMA T_SEMI
S_START_A     :: T_LPAR       S_PARM_LIST   T_RPAR        S_FUNC_DEF    S_CODE   FIRST+: T_LPAR
S_BRACK_EXP   :: T_LBRACK     S_EXP         T_RBRACK                             FIRST+: T_LBRACK 
S_BRACK_EXP   :: T_e                                                             FIRST+: T_COMMA  T_SEMI
S_IDLIST      :: T_COMMA      T_VAR         S_BRACK_EXP   S_IDLIST               FIRST+: T_COMMA
S_IDLIST      :: T_e                                                             FIRST+: T_SEMI
S_PARM_LIST   :: T_TYPE       T_VAR         S_PARM_LIST_A                        FIRST+: T_TYPE
S_PARM_LIST   :: T_VOID       S_PARM_LIST_C                                      FIRST+: T_VOID 
S_PARM_LIST   :: T_e                                                             FIRST+: T_RPAR
S_PARM_LIST_A :: T_COMMA      S_PARM_LIST_B                                      FIRST+: T_COMMA
S_PARM_LIST_A :: T_e                                                             FIRST+: T_RPAR
S_PARM_LIST_B :: S_TYPE       T_VAR         S_PARM_LIST_A                        FIRST+: T_VOID T_TYPE
S_PARM_LIST_C :: T_VAR        S_PARM_LIST_A                                      FIRST+: T_VAR
S_PARM_LIST_C :: T_e                                                             FIRST+: T_RPAR
S_FUNC_DEF    :: T_LBRACE     S_DATA        S_STATEMENT  T_RBRACE               FIRST+: T_LBRAC
S_FUNC_DEF    :: T_SEMI                                                          FIRST+: T_SEMI
S_DATA        :: S_TYPE       T_VAR         S_IDLIST     S_DATA                 FIRST+: T_VOID T_TYPE
S_DATA        :: T_E                                                             
S_STATEMENT   :: T_VAR        S_STATEMENT_A S_STATEMENT
S_STATEMENT_A :: S_BRACK_EXP  T_EQ          S_EXP        T_SEMI      S_STATMENT FIRST+: T_LBRACK T_EQ
S_STATENENT_A :: T_LPAR       S_EXP_LIST    T_RPAR       T_SEMI      S_STATE    FIRST+: T_
S_STATEMENT   :: S_FUNC_CALL  S_STATEMENT
S_STATEMENT   :: S_IF         S_STATEMENT
S_STATEMENT   :: S_WHILE      S_STATEMENT
S_STATEMENT   :: S_RETURN     S_STATEMENT
S_STATEMENT   :: S_BREAK      S_STATEMENT
S_STATEMENT   :: S_CONTINUE   S_STATEMENT
S_STATEMENT   :: S_READ       S_STATEMENT
S_STATEMENT   :: S_WRITE      S_STATEMENT
S_STATEMENT   :: S_PRINT      S_STATEMENT 
S_STATEMENT   :: T_E
S_CODE        :: S_FUNC       S_FUNC_DEC    S_CODE                               FIRST+: T_VOID T_TYPE
S_CODE        :: T_e                                                             FIRST+: T_EOF
S_EXP         :: S_TERM       S_EXP_A                                            FIRST+: T_VAR T_NUMBER T_MINUS T_LPAR
S_EXP_A       :: S_ADD        S_TERM        S_EXP_A                              FIRST+: T_ADD T_MINUS
S_EXP_A       :: T_e                                                             FIRST+: Need mroe info

S_TERM        :: S_FACT       S_TERM_A      
S_TERM_A      :: T_MULT       S_FACT        S_TERM_A
              :: e
S_FACT        :: T_VAR        S_FACT_A 
              :: T_NUMBER    
              :: T_MINUS      T_NUMBER 
              :: T_LPAR       S_EXP         T_RPAR
S_FACT_A      :: T_LBRACK     S_EXP         T_RBRACK
              :: T_LPAR       S_EXP         S_EXP_LIST     T_RPAR
              :: e
S_EXP_LIST    :: T_COMMA      S_EXP         S_EXP_LIST
              :: e
S_CODE        :: S_FUNC       S_FUNC_DEF    S_CODE 
              :: e                    
S_FUNC        :: T_TYPE       T_VAR         T_LPAR        S_PARM_LIST     T_RPAR
S_BLOCK       :: T_LBRACE     S_STMNT_LIST  T_RBRACE 
S_STMNT_LIST  :: S_STMNT      S_STMNT_LIST 
              :: e
S_STMNT       :: S_VAR        S_STMNT_A 
              :: S_IF       
              :: S_WHILE    
              :: S_RETURN   
              :: S_BREAK    
              :: S_CONTINUE 
              :: T_READ       T_LPAR        T_VAR         T_RPAR           T_SEMI 
              :: T_WRITE      T_LPAR        S_EXP         T_RPAR           T_SEMI 
              :: T_PRINT      T_LPAR        T_STRING      T_RPAR           T_SEMI 
S_STMNT_A     :: S_ASSIGN
              :: T_LBRACK     S_EXP         T_RBRACK      S_ASSIGN
              :: T_LPAR       S_EXP_LIST    T_RPAR        T_SEMI 
S_ASSIGN      :: T_EQ         S_EXP         T_SEMI 
S_IF          :: T_IF         T_LPAR        S_COND_EXP    T_RPAR           S_BLOCK 
S_COND_EXP    :: S_COND       T_COND_EXP_A
S_COND_EXP_A  :: T_CONDOP     S_COND 
              :: e 
S_COND        :: S_EXP        T_CMP         S_EXP 
S_WHILE       :: T_WHILE      T_LPAR        S_COND_EXP    T_RPAR           S_BLOCK 
S_RETURN      :: T_RETURN     S_RETURN_A 
S_RETURN_A    :: S_EXP        T_SEMI
              :: T_SEMI
S_BREAK       :: T_BREAK      T_SEMI 
S_CONTINUE    :: T_CONT       T_SEMI

//TERMINALS
//T_COMMA  = ","
//T_SEMI   = ";"
//T_LPAR   = "("
//T_RPAR   = ")"
//T_LBRACK = "["
//T_RBRACK = "]"
//T_LBRACE = "{"
//T_RBRACE = "}"
//T_CONDOP = "||", "&&"
//T_EQ     = "="
//T_MULT   = "*" , "/"
//T_CMP    = "==", "!=", ">=", ">", "<=", "<"
//T_ADD    = "+" 
//T_MINUS  = "-"
//T_VAR    = and non key word stating with [a-zA-z_]
//T_STRING = any string. 
//T_TYPE   = "int", "binary", "decimal" 
//T_VOID   = "void"
//T_IF     = "if"
//T_WHILE  = "while"
//T_RETURN = "return"
//T_BREAK  = "break"
//T_CONT   = "continue"
//T_READ   = "read"
//T_WRITE  = "write"
//T_PRINT  = "print"
//T_NUMBER = Any number.
